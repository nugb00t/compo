#include "stdafx.h"

#include "playground_arbiter.h"
#include "playground_flow.h"
#include "playground_local_client.h"
#include "playground_video.h"

#include "entities/orb_logic.h"

using namespace game_playground;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

engine::GameLocalClient* GameFactory::createLocalClient() {
	return new GameLocalClient;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

engine::GameArbiter* GameFactory::createArbiter() {
	return new GameArbiter;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

engine::GameFlow* GameFactory::createFlow() {
	return new GameFlow;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

engine::GameVideo* GameFactory::createVideo() {
	return new GameVideo;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

engine::LogicComponent* GameFactory::createLogicComponent(const uint type) {
	switch (type) {
		case GameFactory::ENTITY_ORB:
			return new OrbLogic;
			break;
		default:
			assert(false);
			return NULL;
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

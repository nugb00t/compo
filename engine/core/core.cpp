#include "stdafx.h"

#include "core.h"

#pragma comment(lib, "winmm.lib")		// timer stuff

using namespace engine;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Core::Core() {
	CHECKED_GENERIC_CALL(::timeBeginPeriod(1), TIMERR_NOERROR);	// system timer resolution
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Core::run() {
	for (std::list<Callable*>::iterator it = systems_.begin(); it != systems_.end(); ++it) {
		threads_.create_thread(boost::ref(**it));
	}

	threads_.join_all();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

time_t Core::time() const {
	return ::timeGetTime();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef ENGINE_STDAFX_H
#define ENGINE_STDAFX_H

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <assert.h>
#include <conio.h>		// _getch()
#include <stdio.h>
#include <tchar.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <map>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma warning (disable: 4244)		// conversion from 'int' to 'unsigned short', possible loss of data
#include <boost/intrusive_ptr.hpp>
#include <boost/thread.hpp>
#pragma warning (default: 4244)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef _WIN32_WINNT
#define _WIN32_WINNT 0x0500		// winxp
#endif

#include <Windows.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <cml/cml.h>
typedef cml::vector2f Vector2;
typedef cml::vector3f Vector3;
typedef cml::vector4f Vector4;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef VIDEO_DIRECTX
	#include <d3d9.h>
	#include <d3dx9.h>
#endif

#ifdef VIDEO_OPENGL
	// glew - before opengl
	#define GLEW_STATIC
	#include <GL/glew.c>
	#include <GL/wglew.h>
	// opengl
	#include <GL/gl.h>
	#include <GL/glu.h>
	#include <GL/glaux.h>
#endif

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <kaynine/utility/singleton.h>
#include <kaynine/fs_tools/tools.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define UNUSED(x)

#ifdef _DEBUG
#define DEBUG_ONLY(x) x
#else
#define DEBUG_ONLY(x)
#endif

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif
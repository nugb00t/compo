#include "stdafx.h"

#ifdef VIDEO_DIRECT3D9
#include "engine.h"

using namespace engine;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TextureD3D9::TextureD3D9(const TCHAR* const path)
: texture_(NULL), path_(path) {
	assert(path);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TextureD3D9::~TextureD3D9() {
	if (texture_)
		texture_->Release();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool TextureD3D9::initialize() {
	CHECKED_D3D_CALL(D3DXCreateTextureFromFile(&g_engine.videoImplD3D9->device(), path_, &texture_));
	return true;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TextureD3D9::activate(const uint stage) {
	assert(texture_);

	CHECKED_D3D_CALL_A(g_engine.videoImplD3D9->device().SetTexture(stage, texture_));
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif
